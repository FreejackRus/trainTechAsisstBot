from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from keyboards.reply_kb import get_main_menu_kb, get_claim_type_kb

router = Router()

# === /start ===
@router.message(CommandStart())
async def start(message: Message, state: FSMContext):
    await state.clear()
    await message.answer( "ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Peremena!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n", reply_markup=get_main_menu_kb())

# === /help ===
@router.message(F.text == "–ü–æ–º–æ—â—å")
async def cmd_help(message: Message):
    help_text = (
        "üìå *–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç?*\n\n"
        "1. /start ‚Äî –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "2. –í—ã–±–µ—Ä–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É' ‚Üí —Ç–∏–ø –∑–∞—è–≤–∫–∏ ‚Üí –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É\n"
        "3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–ü—Ä–æ—á–µ–µ (–≤—Ä—É—á–Ω—É—é)', –µ—Å–ª–∏ –Ω—É–∂–µ–Ω —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –ø—Ä–æ–±–ª–µ–º—ã/—Ä–∞–±–æ—Ç—ã\n"
        "4. –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –æ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ GLPI\n"
        "5. –° –ø–æ–º–æ—â—å—é '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–æ–∫' –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã ‚Äî –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø–æ–¥–¥–µ—Ä–∂–∫–µ."
    )
    await message.answer(help_text, parse_mode="Markdown")
# === "–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É" ===
@router.message(F.text == "–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É")
async def create_claim_menu(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞—è–≤–∫–∏:", reply_markup=get_claim_type_kb())

# === "–û—Ç–º–µ–Ω–∏—Ç—å" ===
@router.message(F.text == "–û—Ç–º–µ–Ω–∏—Ç—å")
async def cancel_anywhere(message: Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state:
        await state.clear()
        await message.answer("–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏.", reply_markup=get_main_menu_kb())
    else:
        await message.answer("–í—ã —É–∂–µ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.", reply_markup=get_main_menu_kb()) 