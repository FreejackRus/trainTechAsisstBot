# utils/renewal_utils.py
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardMarkup, InlineKeyboardButton
import os
import tempfile
from aiogram import Bot


async def show_renewal_summary(message: CallbackQuery | Message, state: FSMContext):
    if isinstance(message, CallbackQuery):
        message = message.message

    data = await state.get_data()

    # –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
    executor_name = data.get("executor_name", "-")
    train_number = data.get("train_number", "-")
    wagon_count = data.get("wagon_count", "-")
    wagon_sn = data.get("wagon_sn", "-")
    location = data.get("location", "-")
    datetime = data.get("datetime", "-")
    comment = data.get("comment", "-")

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–≤–æ–¥–∫–∏
    summary = (
        "üìÑ *–ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—è–≤–∫–µ*\n\n"
        f"üîπ –¢–∏–ø –∑–∞—è–≤–∫–∏: –ü–µ—Ä–µ–æ—Å–Ω–∞—â–µ–Ω–∏–µ v1\n"
        f"üë§ –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫: {executor_name}\n"
        f"üöÜ –ü–æ–µ–∑–¥ ‚Ññ: {train_number}\n"
        f"üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–≥–æ–Ω–æ–≤: 1"
        f"üî¢ –°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä –≤–∞–≥–æ–Ω–∞: {wagon_sn}\n"
        f"üìç –ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ä–∞–±–æ—Ç: {location}\n"
        f"üìÖ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è —Å–æ—Å—Ç–∞–≤–∞ –≤ –¥–µ–ø–æ: {datetime}\n"
        f"üìù –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {comment or '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}"
    )

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    confirm_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É", callback_data="create_renewal_claim")],
        [InlineKeyboardButton(text="üõ† –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="renewalV1_edit_start")]
    ])

    current_state = await state.get_state()

    # –ï—Å–ª–∏ –º—ã –±—ã–ª–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî –æ—Å—Ç–∞—ë–º—Å—è –≤ —ç—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    if current_state == "ClaimRenewal:editing":
        # –ù–µ –º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–≤–æ–¥–∫—É
        try:
            await message.edit_text(summary, reply_markup=confirm_kb, parse_mode="Markdown")
        except Exception:
            await message.answer(summary, reply_markup=confirm_kb, parse_mode="Markdown")
    else:
        # –ò–Ω–∞—á–µ —Å—Ç–∞–≤–∏–º confirmation ‚Äî –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
        from states.renewal_states import ClaimRenewal
        await state.set_state(ClaimRenewal.confirmation)
        await message.answer(summary, reply_markup=confirm_kb, parse_mode="Markdown")



async def download_file(bot: Bot, file_id: str) -> str:
        """
        –°–∫–∞—á–∏–≤–∞–µ—Ç —Ñ–∞–π–ª –∏–∑ Telegram –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ –Ω–µ–º—É.
        """
        try:
            file = await bot.get_file(file_id)
            file_path = os.path.join(tempfile.gettempdir(), file.file_path)

            # –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            os.makedirs(os.path.dirname(file_path), exist_ok=True)

            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
            await bot.download_file(file.file_path, destination=file_path)
            return file_path
        except Exception as e:
            raise RuntimeError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: {e}")

async def show_renewal_summary_v2(message: Message, state: FSMContext):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–≤–æ–¥–∫—É –ø–æ –∑–∞—è–≤–∫–µ v2 —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
        """
        data = await state.get_data()

        document_info = "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        if data.get("document"):
            doc = data["document"]
            document_info = f"üìé {doc['file_name']} (ID: {doc['file_id']})"

        summary_text = (
            "üìÑ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:\n"
            f"üë®‚Äçüîß –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {data.get('executor_name', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"üöÜ –ü–æ–µ–∑–¥: {data.get('train_number', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"üî¢ –í–∞–≥–æ–Ω–æ–≤: {data.get('wagon_count', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            f"üî¢ –°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä: {data.get('wagon_sn', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"üìç –ú–µ—Å—Ç–æ: {data.get('location', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            f"üìÖ –î–∞—Ç–∞/–≤—Ä–µ–º—è: {data.get('datetime', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            f"üìé –î–æ–∫—É–º–µ–Ω—Ç: {document_info}\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏:"
        )

        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        confirm_kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É", callback_data="create_renewalV2_claim")],
            [InlineKeyboardButton(text="üõ† –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="renewalV2_edit_start")]
        ])

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        from states.renewal_states import ClaimRenewalV2
        await state.set_state(ClaimRenewalV2.confirmation)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–≤–æ–¥–∫—É
        await message.answer(summary_text, reply_markup=confirm_kb, parse_mode="Markdown")