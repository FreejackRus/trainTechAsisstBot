from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Äî —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å" ===
def get_main_menu_kb():
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å", callback_data="main_menu_start")
    )
    return builder.as_markup()

def get_return_main_menu_kb():
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ", callback_data="main_menu_start")
    )
    return builder.as_markup()

# === –¢–∏–ø—ã –∑–∞—è–≤–æ–∫ ‚Äî —Ç–µ–ø–µ—Ä—å –∑–¥–µ—Å—å –Ω–∞—à–∏ –Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ ===
def get_claim_type_kb():
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="–ü–µ—Ä–µ–æ—Å–Ω–∞—â–µ–Ω–∏–µ", callback_data="main_menu_renewal")
    )
    builder.row(
        InlineKeyboardButton(text="–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã", callback_data="claim_type_restoration")
    )
    builder.row(
        InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏", callback_data="main_menu_check_status")
    )
    return builder.as_markup()

# === –ù–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–µ—Ä–µ–æ—Å–Ω–∞—â–µ–Ω–∏—è ===
def get_renewal_menu_kb():
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="–ü–µ—Ä–µ–æ—Å–Ω–∞—â–µ–Ω–∏–µ –≤–∞–≥–æ–Ω–∞", callback_data="claim_type_equipment_v1"),
        InlineKeyboardButton(text="–ü–µ—Ä–µ–æ—Å–Ω–∞—â–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞–≥–æ–Ω–æ–≤", callback_data="claim_type_equipment_v2")
    )
    builder.row(
        InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu_start")
    )
    return builder.as_markup()

# === –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏ (–æ—Å—Ç–∞—ë—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ===
def get_checkbox_kb_with_other(options: list, selected: list = None, prefix="default"):
    if selected is None:
        selected = []
    builder = InlineKeyboardBuilder()
    for idx, option in enumerate(options):
        emoji = "‚úÖ" if idx in selected else "‚¨ú"
        builder.add(InlineKeyboardButton(
            text=f"{emoji} {option}",
            callback_data=f"{prefix}_check_{idx}"
        ))
    builder.adjust(1)
    builder.row(
        InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data=f"{prefix}_done"),
        InlineKeyboardButton(text="–ò–Ω–æ–µ (–ø—Ä–æ–ø–∏—Å–∞—Ç—å)", callback_data=f"{prefix}_other_manual")
    )
    return builder.as_markup()

# === –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã ===
def get_cancel_kb():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_anywhere")]
    ])

def get_retry_or_main_menu_kb():
            buttons = [
                [InlineKeyboardButton(text="üîÑ –í–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π ID", callback_data="retry_ticket_id")],
                [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu_start")]
            ]
            return InlineKeyboardMarkup(inline_keyboard=buttons)